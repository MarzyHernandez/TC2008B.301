# map.py

# Dimension del maoa
GRID_SIZE = 24

# Función para invertir el eje y en la cuadrícula
def invert_y(y):
    return GRID_SIZE - 1 - y

# Definir las direcciones permitidas para cada posición
DIRECTIONS = {}
DIRECTIONS = {
    (0, 23): ['down'],
    (1, 23): ['down', 'left'],
    (2, 23): ['left', 'down'],
    (3, 23): ['left', 'down'],
    (4, 23): ['left', 'down'],
    (5, 23): ['left', 'down'],
    (6, 23): ['left', 'down'],
    (7, 23): ['left', 'down'],
    (8, 23): ['left', 'down'],
    (9, 23): ['left', 'down'],
    (10, 23): ['left', 'down'],
    (11, 23): ['left', 'down'],
    (12, 23): ['left', 'down'],
    (13, 23): ['left', 'down'],
    (14, 23): ['left', 'down'],
    (15, 23): ['left', 'down'],
    (16, 23): ['left', 'down'],
    (17, 23): ['left', 'down'],
    (18, 23): ['left', 'down'],
    (19, 23): ['left', 'down'],
    (20, 23): ['left', 'down'],
    (21, 23): ['left', 'down'],
    (22, 23): ['left', 'down'],
    (23, 23): ['left'],
    (0, 22): ['down', 'right'],
    (1, 22): ['down', 'left'],
    (2, 22): ['left', 'up'],
    (3, 22): ['left', 'up'],
    (4, 22): ['left', 'up'],
    (5, 22): ['left', 'up'],
    (6, 22): ['left', 'up'],
    (7, 22): ['left', 'up'],
    (8, 22): ['left', 'up'],
    (9, 22): ['left', 'up'],
    (10, 22): ['left', 'up'],
    (11, 22): ['left', 'up'],
    (12, 22): ['left', 'up', 'down'],
    (13, 22): ['left', 'up', 'down'],
    (14, 22): ['left', 'up'],
    (15, 22): ['left', 'up'],
    (16, 22): ['left', 'up'],
    (17, 22): ['left', 'up'],
    (18, 22): ['left', 'up'],
    (19, 22): ['left', 'up'],
    (20, 22): ['left', 'up'],
    (21, 22): ['left', 'up'],
    (22, 22): ['left', 'up', 'right'],
    (23, 22): ['up', 'left'],
    (0, 21): ['down', 'right'],
    (1, 21): ['down', 'left'],
    (3, 21): ['up'],
    (12, 21): ['down'],
    (13, 21): ['down'],
    (14, 21): ['up', 'right'],
    (15, 21): ['up', 'left'],
    (17, 21): ['up'],
    (22, 21): ['up', 'right'],
    (23, 21): ['up', 'left'],
    (0, 20): ['down', 'right'],
    (1, 20): ['down', 'left'],
    (6, 20): ['up', 'right'],
    (7, 20): ['up', 'left'],
    (12, 20): ['down', 'right'],
    (13, 20): ['down', 'left'],
    (14, 20): ['up', 'right'],
    (15, 20): ['up', 'left'],
    (22, 20): ['up', 'right'],
    (23, 20): ['up', 'left'],
    (0, 19): ['down', 'right'],
    (1, 19): ['down', 'left'],
    (6, 19): ['up', 'right'],
    (7, 19): ['up', 'left'],
    (10, 19): ['down'],
    (12, 19): ['down', 'right'],
    (13, 19): ['down', 'left'],
    (14, 19): ['up', 'right'],
    (15, 19): ['up', 'left'],
    (22, 19): ['up', 'right'],
    (23, 19): ['up', 'left'],
    (0, 18): ['down', 'right'],
    (1, 18): ['down', 'left'],
    (6, 18): ['up', 'right'],
    (7, 18): ['up', 'left'],
    (8, 18): ['left'],
    (9, 18): ['left', 'down'],
    (10, 18): ['left', 'down'],
    (11, 18): ['left', 'down'],
    (12, 18): ['down', 'left'],
    (13, 18): ['down', 'left'],
    (14, 18): ['up', 'right'],
    (15, 18): ['up', 'left'],
    (20, 18): ['down'],
    (22, 18): ['up', 'right'],
    (23, 18): ['up', 'left'],
    (0, 17): ['down', 'right'],
    (1, 17): ['down', 'left'],
    (5, 17): ['right'],
    (6, 17): ['up', 'right'],
    (7, 17): ['up', 'left'],
    (8, 17): ['left'],
    (9, 17): ['left', 'up'],
    (10, 17): ['left', 'up'],
    (11, 17): ['left', 'up'],
    (12, 17): ['down', 'left'],
    (13, 17): ['down', 'left'],
    (14, 17): ['up'],
    (15, 17): ['up', 'left'],
    (16, 17): ['left', 'down'],
    (17, 17): ['left', 'down'],
    (18, 17): ['left', 'down'],
    (19, 17): ['left', 'down'],
    (20, 17): ['left', 'down'],
    (21, 17): ['left', 'down'],
    (22, 17): ['left', 'up'],
    (23, 17): ['up', 'left'],
    (0, 16): ['down', 'right'],
    (1, 16): ['down', 'left'],
    (12, 16): ['down', 'right'],
    (13, 16): ['down', 'left'],
    (14, 16): ['up'],
    (15, 16): ['up', 'left'],
    (16, 16): ['left', 'up'],
    (17, 16): ['left', 'up'],
    (18, 16): ['left', 'up'],
    (19, 16): ['left', 'up'],
    (20, 16): ['left', 'up'],
    (21, 16): ['left', 'up'],
    (22, 16): ['left', 'up'],
    (23, 16): ['up', 'left'],
    (0, 15): ['down', 'right'],
    (1, 15): ['down', 'left'],
    (6, 15): ['up', 'right'],
    (7, 15): ['up', 'left'],
    (8, 15): ['left'],
    (12, 15): ['down', 'right'],
    (13, 15): ['down', 'left'],
    (14, 15): ['up', 'right'],
    (15, 15): ['up', 'left'],
    (20, 15): ['up'],
    (22, 15): ['up', 'right'],
    (23, 15): ['up', 'left'],
    (0, 14): ['down', 'right'],
    (1, 14): ['down', 'left'],
    (2, 14): ['left'],
    (6, 14): ['up', 'right'],
    (7, 14): ['up', 'left'],
    (12, 14): ['down', 'right'],
    (13, 14): ['down', 'left'],
    (14, 14): ['up', 'right'],
    (15, 14): ['up', 'left'],
    (22, 14): ['up', 'right'],
    (23, 14): ['up', 'left'],
    (0, 13): ['down', 'right'],
    (1, 13): ['down', 'left'],
    (6, 13): ['up', 'right'],
    (7, 13): ['up', 'left'],
    (12, 13): ['down', 'right'],
    (13, 13): ['down', 'left'],
    (14, 13): ['up', 'right'],
    (15, 13): ['up', 'left'],
    (22, 13): ['up', 'right'],
    (23, 13): ['up', 'left'],
    (0, 12): ['down', 'right'],
    (1, 12): ['down', 'left'],
    (4, 12): ['down'],
    (6, 12): ['up', 'right'],
    (7, 12): ['up', 'left'],
    (10, 12): ['down'],
    (12, 12): ['down'],
    (13, 12): ['down', 'left'],
    (14, 12): ['up', 'right'],
    (15, 12): ['up', 'left'],
    (22, 12): ['up', 'right'],
    (23, 12): ['up', 'left'],
    (0, 11): ['down', 'right'],
    (1, 11): ['down', 'left'],
    (2, 11): ['left', 'down'],
    (3, 11): ['left', 'down'],
    (4, 11): ['left', 'down'],
    (5, 11): ['left', 'down'],
    (6, 11): ['left', 'up'],
    (7, 11): ['up', 'left'],
    (8, 11): ['left', 'down'],
    (9, 11): ['left', 'down'],
    (10, 11): ['left', 'down'],
    (11, 11): ['left', 'down'],
    (12, 11): ['left', 'down'],
    (13, 11): ['left'],
    (14, 11): ['left', 'up'],
    (15, 11): ['left', 'up'],
    (16, 11): ['left'],
    (17, 11): ['left', 'down'],
    (18, 11): ['left', 'down'],
    (19, 11): ['left', 'down'],
    (20, 11): ['left', 'down'],
    (21, 11): ['left', 'down'],
    (22, 11): ['up', 'left'],
    (23, 11): ['up', 'left'],
    (0, 10): ['down', 'right'],
    (1, 10): ['down', 'left'],
    (2, 10): ['left', 'up'],
    (3, 10): ['left', 'up'],
    (4, 10): ['left', 'up'],
    (5, 10): ['left', 'up'],
    (6, 10): ['left', 'up'],
    (7, 10): ['left', 'up'],
    (8, 10): ['left', 'up'],
    (9, 10): ['left', 'up'],
    (10, 10): ['left', 'up'],
    (11, 10): ['left', 'up'],
    (12, 10): ['left', 'down'],
    (15, 10): ['up'],
    (16, 10): ['left'],
    (17, 10): ['left', 'up'],
    (18, 10): ['left', 'up'],
    (19, 10): ['left', 'up'],
    (20, 10): ['left', 'up'],
    (21, 10): ['left', 'up'],
    (22, 10): ['up', 'left'],
    (23, 10): ['up', 'left'],
    (0, 9): ['down', 'right'],
    (1, 9): ['left', 'down'],
    (2, 9): ['right', 'down'],
    (3, 9): ['right', 'down'],
    (4, 9): ['right', 'down'],
    (5, 9): ['right', 'down'],
    (6, 9): ['right'],
    (7, 9): ['right'],
    (8, 9): ['right', 'down'],
    (9, 9): ['right', 'down'],
    (10, 9): ['right', 'down'],
    (11, 9): ['right', 'down'],
    (12, 9): ['down'],
    (15, 9): ['right', 'up'],
    (16, 9): ['right'],
    (17, 9): ['right'],
    (18, 9): ['right'],
    (19, 9): ['right'],
    (20, 9): ['right', 'down'],
    (21, 9): ['right', 'down'],
    (22, 9): ['up', 'right'],
    (23, 9): ['up', 'left'],
    (0, 8): ['down', 'right'],
    (1, 8): ['right', 'down', 'left'],
    (2, 8): ['right', 'up'],
    (3, 8): ['right', 'up'],
    (4, 8): ['right', 'up'],
    (5, 8): ['right', 'up'],
    (6, 8): ['right', 'down'],
    (7, 8): ['right', 'down'],
    (8, 8): ['right', 'up'],
    (9, 8): ['right', 'up'],
    (10, 8): ['right', 'up'],
    (11, 8): ['right'],
    (12, 8): ['right', 'down'],
    (13, 8): ['right', 'down'],
    (14, 8): ['right'],
    (15, 8): ['right', 'up'],
    (16, 8): ['right'],
    (17, 8): ['right'],
    (18, 8): ['right', 'up'],
    (19, 8): ['right', 'up'],
    (20, 8): ['right', 'up'],
    (21, 8): ['right', 'up'],
    (22, 8): ['up', 'right'],
    (23, 8): ['up', 'left'],
    (0, 7): ['down', 'right'],
    (1, 7): ['down', 'left'],
    (6, 7): ['down', 'right'],
    (7, 7): ['down', 'left'],
    (10, 7): ['up'],
    (12, 7): ['down', 'right'],
    (13, 7): ['down', 'left'],
    (14, 7): ['up', 'right'],
    (15, 7): ['up', 'right'],
    (18, 7): ['up'],
    (19, 7): ['up'],
    (22, 7): ['up', 'right'],
    (23, 7): ['up', 'left'],
    (0, 6): ['down'],
    (1, 6): ['down'],
    (3, 6): ['down'],
    (6, 6): ['down', 'right'],
    (7, 6): ['down', 'left'],
    (12, 6): ['down', 'right'],
    (13, 6): ['down', 'left'],
    (14, 6): ['up', 'right'],
    (15, 6): ['up', 'left'],
    (17, 6): ['right'],
    (18, 6): ['up', 'right'],
    (19, 6): ['up', 'left'],
    (22, 6): ['up', 'right'],
    (23, 6): ['up', 'left'],
    (0, 5): ['down', 'right'],
    (1, 5): ['down', 'left'],
    (2, 5): ['left'],
    (3, 5): ['left', 'down'],
    (4, 5): ['left', 'down'],
    (5, 5): ['left', 'down'],
    (6, 5): ['down', 'left', 'right'],
    (7, 5): ['down', 'right', 'left'],
    (8, 5): ['right', 'down'],
    (9, 5): ['right', 'down'],
    (10, 5): ['right', 'down'],
    (11, 5): ['right', 'down'],
    (12, 5): ['down', 'right'],
    (13, 5): ['down', 'left'],
    (14, 5): ['up', 'right'],
    (15, 5): ['up', 'left'],
    (18, 5): ['up', 'right'],
    (19, 5): ['up', 'left'],
    (22, 5): ['up', 'right'],
    (23, 5): ['up', 'left'],
    (0, 4): ['down', 'right'],
    (1, 4): ['down', 'left'],
    (2, 4): ['left'],
    (3, 4): ['left', 'up'],
    (4, 4): ['left', 'up'],
    (5, 4): ['left', 'up'],
    (6, 4): ['down', 'left'],
    (7, 4): ['down', 'right'],
    (8, 4): ['right', 'up'],
    (9, 4): ['right', 'up'],
    (10, 4): ['right', 'up'],
    (11, 4): ['right', 'up'],
    (12, 4): ['down', 'right'],
    (13, 4): ['down', 'left'],
    (14, 4): ['up', 'right'],
    (15, 4): ['up', 'left'],
    (17, 4): ['right'],
    (18, 4): ['up', 'right'],
    (19, 4): ['up', 'left'],
    (20, 4): ['left'],
    (22, 4): ['up', 'right'],
    (23, 4): ['up', 'left'],
    (0, 3): ['down', 'right'],
    (1, 3): ['down', 'left'],
    (4, 3): ['up'],
    (6, 3): ['down', 'left'],
    (7, 3): ['down', 'right'],
    (12, 3): ['down', 'right'],
    (13, 3): ['down', 'left'],
    (14, 3): ['up', 'right'],
    (15, 3): ['up', 'left'],
    (18, 3): ['up', 'right'],
    (19, 3): ['up', 'left'],
    (22, 3): ['up', 'right'],
    (23, 3): ['up', 'left'],
    (0, 2): ['down', 'right'],
    (1, 2): ['down', 'left'],
    (6, 2): ['down'],
    (7, 2): ['down'],
    (9, 2): ['down'],
    (12, 2): ['down', 'right'],
    (13, 2): ['down', 'left'],
    (14, 2): ['up', 'right'],
    (15, 2): ['up', 'left'],
    (18, 2): ['up', 'right'],
    (19, 2): ['up', 'left'],
    (22, 2): ['up', 'right'],
    (23, 2): ['up', 'left'],
    (0, 1): ['down', 'right'],
    (1, 1): ['down', 'left', 'right'],
    (2, 1): ['right', 'down'],
    (3, 1): ['right', 'down'],
    (4, 1): ['right', 'down'],
    (5, 1): ['right', 'down'],
    (6, 1): ['down', 'right'],
    (7, 1): ['down', 'right'],
    (8, 1): ['right', 'down'],
    (9, 1): ['right', 'down'],
    (10, 1): ['right', 'down'],
    (11, 1): ['right', 'down'],
    (12, 1): ['right'],
    (13, 1): ['right'],
    (14, 1): ['right', 'up'],
    (15, 1): ['right', 'up'],
    (16, 1): ['right', 'down'],
    (17, 1): ['right', 'down'],
    (18, 1): ['right', 'up'],
    (19, 1): ['right', 'up'],
    (20, 1): ['right', 'down'],
    (21, 1): ['right', 'down'],
    (22, 1): ['right', 'up', 'left'],
    (23, 1): ['up', 'left'],
    (0, 0): ['right'],
    (1, 0): ['right'],
    (2, 0): ['right', 'up'],
    (3, 0): ['right', 'up'],
    (4, 0): ['right', 'up'],
    (5, 0): ['right', 'up'],
    (6, 0): ['right'],
    (7, 0): ['right'],
    (8, 0): ['right', 'up'],
    (9, 0): ['right', 'up'],
    (10, 0): ['right', 'up'],
    (11, 0): ['right', 'up'],
    (12, 0): ['right'],
    (13, 0): ['right'],
    (14, 0): ['right'],
    (15, 0): ['right'],
    (16, 0): ['right', 'up'],
    (17, 0): ['right', 'up'],
    (18, 0): ['right', 'up'],
    (19, 0): ['right', 'up'],
    (20, 0): ['right', 'up'],
    (21, 0): ['right', 'up'],
    (22, 0): ['right'],
    (23, 0): ['up'],
    (7, 16): ['up'],
    (6, 16): ['up'],
    (7, 21): ['up'],
    (6, 21): ['up']
}

# Coordenadas de estacionamientos (zonas en amarillo)
PARKINGS = {
    (3 - 1, invert_y(10 - 1)): 1,
    (4 - 1, invert_y(3 - 1)): 2,
    (4 - 1, invert_y(18 - 1)): 3,
    (5 - 1, invert_y(12 - 1)): 4,
    (5 - 1, invert_y(21 - 1)): 5,
    (6 - 1, invert_y(7 - 1)): 6,
    (9 - 1, invert_y(9 - 1)): 7,
    (10 - 1, invert_y(22 - 1)): 8,
    (11 - 1, invert_y(5 - 1)): 9,
    (11 - 1, invert_y(12 - 1)): 10,
    (11 - 1, invert_y(17 - 1)): 11,
    (18 - 1, invert_y(3 - 1)): 12,
    (18 - 1, invert_y(18 - 1)): 13,
    (18 - 1, invert_y(20 - 1)): 14,
    (21 - 1, invert_y(6 - 1)): 15,
    (21 - 1, invert_y(9 - 1)): 16,
    (21 - 1, invert_y(20 - 1)): 17
}

# Coordenadas de edificios (zonas en azul)
BUILDINGS = [
    (x - 1, invert_y(y - 1)) for x in range(3, 7) for y in range(3, 13)
    ] + [
    (x - 1, invert_y(y - 1)) for x in range(9, 13) for y in range(3, 6)
    ] + [
    (x - 1, invert_y(y - 1)) for x in range(9, 13) for y in range(8, 13)
    ] + [
    (x - 1, invert_y(y - 1)) for x in range(17, 23) for y in range(3, 7)
    ] + [
    (x - 1, invert_y(y - 1)) for x in range(17, 23) for y in range(9, 13)
    ] + [
    (x - 1, invert_y(y - 1)) for x in range(3, 7) for y in range(17, 19)
    ] + [
    (x - 1, invert_y(y - 1)) for x in range(3, 7) for y in range(21, 23)
    ] + [
    (x - 1, invert_y(y - 1)) for x in range(9, 13) for y in range(17, 19)
    ] + [
    (x - 1, invert_y(y - 1)) for x in range(9, 13) for y in range(21, 23)
    ] + [
    (x - 1, invert_y(y - 1)) for x in range(17, 19) for y in range(17, 23)
    ] + [
    (x - 1, invert_y(y - 1)) for x in range(21, 23) for y in range(17, 23)
]


# Eliminar las celdas de estacionamientos de la lista de edificios
BUILDINGS = [pos for pos in BUILDINGS if pos not in PARKINGS]

# Coordenadas de semáforos (rojo)
TRAFFIC_LIGHTS_RED = [
    (9 - 1, invert_y(1 - 1)), (9 - 1, invert_y(2 - 1)), (9 - 1, invert_y(6 - 1)), 
    (9 - 1, invert_y(7 - 1)), (18 - 1, invert_y(15 - 1)), (18 - 1, invert_y(16 - 1)), 
    (6 - 1, invert_y(23 - 1)), (6 - 1, invert_y(24 - 1)), (3 - 1, invert_y(19 - 1)), 
    (3 - 1, invert_y(20 - 1))
]

# Coordenadas de semáforos (verde)
TRAFFIC_LIGHTS_GREEN = [
    (7 - 1, invert_y(3 - 1)), (8 - 1, invert_y(3 - 1)), (7 - 1, invert_y(8 - 1)), 
    (8 - 1, invert_y(8 - 1)), (1 - 1, invert_y(18 - 1)), (2 - 1, invert_y(18 - 1)), 
    (7 - 1, invert_y(22 - 1)), (8 - 1, invert_y(22 - 1)), (19 - 1, invert_y(17 - 1)), 
    (20 - 1, invert_y(17 - 1))
]

# Coordenadas de la glorieta (café)
GLORIETA = [(14 - 1, invert_y(14 - 1)), (15 - 1, invert_y(14 - 1)), (14 - 1, invert_y(15 - 1)), (15 - 1, invert_y(15 - 1))]


def calculate_sidewalks(buildings):
    sidewalks = set()
    building_set = set(buildings)

    for (x, y) in buildings:
        # Verifica si hay al menos una celda adyacente fuera del área de edificios
        for dx, dy in [(-1, 0), (1, 0), (0, -1), (0, 1)]:
            neighbor = (x + dx, y + dy)
            if neighbor not in building_set:  # La celda es parte del perímetro interno
                sidewalks.add((x, y))
                break  # Ya sabemos que esta celda es una banqueta, no es necesario seguir
    return list(sidewalks)

# Calcular las banquetas (dentro del área de edificios)
SIDEWALKS = calculate_sidewalks(BUILDINGS)
